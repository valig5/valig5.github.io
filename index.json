[{"content":"我向来是觉得Archlinux的安装特别麻烦，它不像Gentoo那样可以自定义编译和安装喜欢的功能，提高软件运行的性能。\n它的安装过程也跟其他发行版并没有什么本质太大的区别，同样是设置键盘布局、语言、硬盘分区、安装软件、配置fstab、安装引导。其他发行版说详细了也是这样，只不过Arch是默认没做脚本安装罢了\n因此Archinstall脚本一出来我是特别高兴的，本文也是基于此脚本详述。\n安装前的准备 U盘启动 准备一个大牌子的U盘（杂牌U盘在刻录时容易出现问题），安装Ventoy ，并把下载好的ArchISO拖进U盘\n重启，打开电脑的BIOS并设置U盘启动项为第一位\n联网 ArchISO在启动时都会自动尝试连接网络，先用ping命令看看有无网络，如果能ping通那此步可以跳过\nping 163.com\n设置无线网络 通常有线网络都不需要设置，如果你使用的是无线网络，可以按以下步骤连接WiFi\nip a # 查看你的无线网卡名字\nrfkill unblock wifi # 解锁WiFi功能\nip link set \u0026lt;网卡名\u0026gt; up # 激活网卡\niwctl # 进入无线网络设置\nstation \u0026lt;网卡名\u0026gt; scan # 扫描无线网络\nstation \u0026lt;网卡名\u0026gt; connect \u0026lt;SSID\u0026gt; # 连接WiFi并输入密码\nstation \u0026lt;网卡名\u0026gt; show # 查看是否连接成功\nexit # 退出无线网络设置\n如果这样都没法联网，那么还有一个终极技能，电脑USB连接手机开启网络共享吧！\n安装系统前必要的设置 打开pacman的配置文件\nnano /etc/pacman.conf\n找到#ParellelDownload = 5一行，把前面的#号删掉取消注释，此选项可以提高安装系统的速度\n找到#[multilib]一行与下面一行一并取消掉注释，可以安装更多的软件\npacman -Sy archlinux-keyring 更新签名以免等会儿安装时出现问题\n安装系统 archinstall 运行安装脚本\nmirror region为China 选择镜像源以提高下载速度\nharddrives 选择你要装到的硬盘里\n在Specify profile 选择你要安装的桌面或者最小化安装\n设置用户名和密码\n选择你喜欢的音频管理器pipewire或者pulseaudio\n选择你喜欢的linux kernel\n在Additional packages to install 中安装你想要的软件，推荐安装noto-fonts-cjk(中文字体) fcitx5-im fcitx5-chinese-addons(输入法)\n在Configure network中选择网络管理器，推荐选择NetworkManager\n选择时区\n在最后一项选择[multilib]\n一切都弄好之后直接选择Install梭哈！\n安装后的配置 经过漫长的等待后，你的系统已经安装好了，这时候会提醒你是否以root身份进入系统，我们选择y，或者直接回车\n输入nano /etc/pacman.conf 把Color、Paralleldownload = 5和[multilib]取消注释，并在最后添加\n`[archlinuxcn]\nServer = 镜像源/archlinuxcn/$arch`\n来启用archlinuxcn源\n输入nano /etc/locale.gen 找到zh_CN UTF-8和en_US UTF-8 这两行并取消注释，保存后输入locale-gen来刷新\n输入pacman -Syyu 刷新缓存并更新系统\n输入pacman -S archlinux-keyring archlinuxcn-keyring安装签名以免日后出现问题。\n这时候你已经可以使用archlinuxcn源来安装软件了\n推荐安装paru yay这两个AUR包管理器来安装野包\n输入nano /etc/environment来配置输入法的环境变量，在最后加入\n`GTK_IM_MODULE=fcitx\nQT_IM_MODULE=fcitx\nXMODIFIERS=@im=fcitx\nINPUT_METHOD=fcitx\nSDL_IM_MODULE=fcitx\nGLFW_IM_MODULE=ibus`\n输入以上内容然后按CTRL+X来保存，对于 GNOME 用户而言，还需要安装gnome-shell-extension-kimpanel-git以在右上角显示输入法的状态。当然，您也可以手动安装扩展\n输入exit退出，这时候脚本会自动帮我们写入fstab。完成后输入reboot重启\n这时候你已经完成Arch的安装了，恭喜你！\n最后 完成Arch安装后才是你开始的第一步，在日后使用的时候如果出现问题要多看Archwiki，这差不多是Linux世界之中最强的wiki了，很多问题都能在上面找到答案。如果实在找不到问题的解决办法可以到各个发行版的telegram群组中问人，里面的人都很友善热情。\n希望你在Linux旅途中过的愉快！\n","permalink":"https://valig5.github.io/post/archlinux-install/","summary":"我向来是觉得Archlinux的安装特别麻烦，它不像Gentoo那样可以自定义编译和安装喜欢的功能，提高软件运行的性能。\n它的安装过程也跟其他发行版并没有什么本质太大的区别，同样是设置键盘布局、语言、硬盘分区、安装软件、配置fstab、安装引导。其他发行版说详细了也是这样，只不过Arch是默认没做脚本安装罢了\n因此Archinstall脚本一出来我是特别高兴的，本文也是基于此脚本详述。\n安装前的准备 U盘启动 准备一个大牌子的U盘（杂牌U盘在刻录时容易出现问题），安装Ventoy ，并把下载好的ArchISO拖进U盘\n重启，打开电脑的BIOS并设置U盘启动项为第一位\n联网 ArchISO在启动时都会自动尝试连接网络，先用ping命令看看有无网络，如果能ping通那此步可以跳过\nping 163.com\n设置无线网络 通常有线网络都不需要设置，如果你使用的是无线网络，可以按以下步骤连接WiFi\nip a # 查看你的无线网卡名字\nrfkill unblock wifi # 解锁WiFi功能\nip link set \u0026lt;网卡名\u0026gt; up # 激活网卡\niwctl # 进入无线网络设置\nstation \u0026lt;网卡名\u0026gt; scan # 扫描无线网络\nstation \u0026lt;网卡名\u0026gt; connect \u0026lt;SSID\u0026gt; # 连接WiFi并输入密码\nstation \u0026lt;网卡名\u0026gt; show # 查看是否连接成功\nexit # 退出无线网络设置\n如果这样都没法联网，那么还有一个终极技能，电脑USB连接手机开启网络共享吧！\n安装系统前必要的设置 打开pacman的配置文件\nnano /etc/pacman.conf\n找到#ParellelDownload = 5一行，把前面的#号删掉取消注释，此选项可以提高安装系统的速度\n找到#[multilib]一行与下面一行一并取消掉注释，可以安装更多的软件\npacman -Sy archlinux-keyring 更新签名以免等会儿安装时出现问题\n安装系统 archinstall 运行安装脚本\nmirror region为China 选择镜像源以提高下载速度","title":"用Archinstall脚本安装Arch Linux"},{"content":"本文主要是讲述我的这个博客是怎么实现的，才了不少坑才弄好，前端要做的东西可真麻烦啊，还是后端好。\n开始前的准备工作 GitHub 新建一个GitHub帐号 此处不赘述过程\n新建一个repository repository的名字必须为用户名.github,io\nNodejs Debian 系 sudo apt install nodejs npm\nRedHat 系 sudo dnf install nodejs npm\nArch 系 sudo pacman -S nodejs npm\nWindows 自己百度下载\n在本地电脑搭建博客框架 安装Hexo npm install -g hexo-cli\n初始化博客 在一个你喜欢的地址新建一个空的文件夹，文件夹随便起个你喜欢的名字（最好英文），在文件夹里打开终端运行 hexo init\n看看你初始化后的博客 hexo g \u0026amp;\u0026amp; hexo s 在终端中按住ctrl选中链接就可以打开看看了\n在配置文件中修改github部署位置 `deploy:\ntype: git\nrepo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上.git\nbranch: 填入你喜欢的分支名`\nGitHub Pages 设置自定义域名 打开Repository -\u0026gt; Setting -\u0026gt; Pages 里面就有\n在域名设置网站处解析 选择你想要设置的域名 -\u0026gt; 快速解析 -\u0026gt; 直接复制github用户名.github.io就自动完成了\n设置CNAME 在./source目录下创建一个叫CNAME的文件，在里面写入你的自定义域名\n","permalink":"https://valig5.github.io/post/github-pages-hexo/","summary":"本文主要是讲述我的这个博客是怎么实现的，才了不少坑才弄好，前端要做的东西可真麻烦啊，还是后端好。\n开始前的准备工作 GitHub 新建一个GitHub帐号 此处不赘述过程\n新建一个repository repository的名字必须为用户名.github,io\nNodejs Debian 系 sudo apt install nodejs npm\nRedHat 系 sudo dnf install nodejs npm\nArch 系 sudo pacman -S nodejs npm\nWindows 自己百度下载\n在本地电脑搭建博客框架 安装Hexo npm install -g hexo-cli\n初始化博客 在一个你喜欢的地址新建一个空的文件夹，文件夹随便起个你喜欢的名字（最好英文），在文件夹里打开终端运行 hexo init\n看看你初始化后的博客 hexo g \u0026amp;\u0026amp; hexo s 在终端中按住ctrl选中链接就可以打开看看了\n在配置文件中修改github部署位置 `deploy:\ntype: git\nrepo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上.git\nbranch: 填入你喜欢的分支名`\nGitHub Pages 设置自定义域名 打开Repository -\u0026gt; Setting -\u0026gt; Pages 里面就有\n在域名设置网站处解析 选择你想要设置的域名 -\u0026gt; 快速解析 -\u0026gt; 直接复制github用户名.","title":"用github和hexo框架搭建属于自己的个人博客"}]